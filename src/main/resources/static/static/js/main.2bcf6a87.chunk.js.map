{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","SecurityUtils/setJWTHeaders.js","actions/SecurityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectsReducers.js","reducers/backlogReducers.js","reducers/SecurityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/LandingPage.js","components/UserManagement/Register.js","components/UserManagement/Login.js","SecurityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","Link","to","onClick","bind","Component","connect","window","confirm","delete","createProjectButton","Fragment","Dashboard","getProjects","projects","CreateProjectButton","map","key","state","get","setJWTHeaders","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validateToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","event","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanValidateToken","combineReducers","action","filter","backlog","projectSequence","middleWare","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","updateProject","match","params","getProject","disabled","ProjectTask","deleteProjectTaskByProjectIdentifierAndProjectSequence","priorityString","priorityClass","projectTaskProps","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_props","todoItems","inprogressItems","doneItemItems","i","length","console","log","status","ProjectBoard","getProjectTaskByProjectIdentifier","BoardContent","role","boardAlgorithms","projectTaskIdentifier","AddProjectTask","dueDate","projectTask","createBacklogByProjectTaskIdentifier","UpdateProjectTask","create_At","getProjectTaskByProjectIdentifierAndProjectSequence","update_task","updateProjectTask","updateProjectTaskByProjectIdentifierAndProjectSequence","patch","LandingPage","Register","username","password","confirmPassword","newUser","createNewser","Login","newLogin","login","loginRequest","res","setItem","decoded","jwt_decode","component","otherProps","Route","render","Redirect","JWTToken","currentTokenTime","Date","now","exp","App","exact","path","Switch","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yVAKaA,EAAgB,SAACC,EAASC,GAAV,8CAAsB,WAAMC,GAAN,SAAAC,EAAA,+EAGZC,IAAMC,KAAK,eAAgBL,GAHf,cAInCC,EAAQK,KAAK,cACbJ,EAAS,CACDK,KCXE,aDYFC,QAAS,KAPkB,gDAUnCN,EAAS,CACDK,KChBE,aDiBFC,QAAS,KAAIC,SAASC,OAZK,yDAAtB,uDECvBC,E,4MAEJC,cAAgB,SAAAC,GACb,EAAKC,MAAMC,cAAcF,I,uDAElB,IAECb,EAAYgB,KAAKF,MAAjBd,QACT,OAEE,yBAAKiB,UAAU,aACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,0BAAMA,UAAU,WAAWjB,EAAQkB,oBAErC,yBAAKD,UAAU,2BACb,4BAAKjB,EAAQmB,aACb,+BAAKnB,EAAQoB,cAEf,yBAAKH,UAAU,8BACb,wBAAIA,UAAU,cACZ,kBAACI,EAAA,EAAD,CAAMC,GAAE,wBAAmBtB,EAAQkB,oBACjC,wBAAID,UAAU,yBACZ,uBAAGA,UAAU,6BAAb,qBAGH,kBAACI,EAAA,EAAD,CAAMC,GAAE,yBAAoBtB,EAAQkB,oBACnC,wBAAID,UAAU,0BACZ,uBAAGA,UAAU,mBAAb,0BAIF,wBAAIA,UAAU,yBAAyBM,QAAUP,KAAKJ,cAAcY,KAAKR,KAAMhB,EAAQkB,oBACrF,uBAAGD,UAAU,2BAAb,6B,GAlCMQ,aAkDXC,cAAQ,KAAK,CAACX,cFXA,SAAAF,GAAE,8CAAI,WAAMX,GAAN,SAAAC,EAAA,0DACxBwB,OAAOC,QACf,gGAFgC,gCAK5BxB,IAAMyB,OAAN,uBAA6BhB,IALD,OAM3BX,EAAS,CACDK,KCjDa,iBDkDbC,QAASK,IARU,2CAAJ,wDEWhBa,CAA+Bf,GC1C/BmB,EAXY,WAEtB,OACI,kBAAC,IAAMC,SAAP,KACG,kBAACV,EAAA,EAAD,CAAOC,GAAG,cAAeL,UAAU,uBAAnC,sBCANe,E,kLAGGhB,KAAKF,MAAMmB,gB,+BAEN,IAEFC,EAAYlB,KAAKF,MAAMd,QAAvBkC,SAEJ,OAEJ,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,yBAAd,YACA,6BACE,kBAACkB,EAAD,MACF,6BACA,6BAECD,EAASE,KAAI,SAAApC,GAAO,OAClB,kBAAC,EAAD,CAAcqC,IAAKrC,EAAQa,GAAKb,QAASA,e,GAtBpCyB,aA2CTC,eAJU,SAAAY,GAAK,MAAI,CAC9BtC,QAASsC,EAAMtC,WAGoB,CAACiC,YJ5Bb,yDAAM,WAAM/B,GAAN,eAAAC,EAAA,sEACFC,IAAMmC,IAAI,oBADR,OACnB9B,EADmB,OAEzBP,EAAS,CACDK,KCxBY,eDyBZC,QAASC,EAASC,OAJD,2CAAN,wDI4BZgB,CAAwCM,GCtCxCQ,EATO,SAACC,GAEhBA,EACCrC,IAAMsC,SAASC,QAAQC,OAAvB,cAAiDH,SAEzCrC,IAAMsC,SAASC,QAAQC,OAAvB,e,iBCuDDC,EAAQ,kBAAM,SAAA3C,GACvB4C,aAAaC,WAAW,YACxBP,GAAc,GACbtC,EAAS,CACAK,KLpDgB,mBKqDhBC,QAAU,OC7DpBwC,E,uKAGEhC,KAAKF,MAAM+B,SACXlB,OAAOsB,SAASC,KAAM,M,+BAGhB,IAkDLC,EAlDI,EAE0BnC,KAAKF,MAAMsC,SAAnCC,EAFF,EAEEA,cAAeC,EAFjB,EAEiBA,KAEhBC,EAEF,yBAAKtC,UAAU,2BAA2BJ,GAAG,cAC7C,wBAAII,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAACI,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,cAA9B,eAMR,wBAAIL,UAAU,sBACV,wBAAIA,UAAU,YACV,kBAACI,EAAA,EAAD,CAAMJ,UAAU,YAAYK,GAAG,cACxB,uBAAGL,UAAU,4BACXqC,EAAKE,WAGlB,wBAAIvC,UAAU,YACb,kBAACI,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAAWC,QAASP,KAAK6B,OAAOrB,KAAKR,OAAnE,aAQHyC,EAEF,yBAAKxC,UAAU,2BAA2BJ,GAAG,cAC5C,wBAAII,UAAU,sBACX,wBAAIA,UAAU,YACV,kBAACI,EAAA,EAAD,CAAMJ,UAAU,YAAYK,GAAG,aAA/B,YAIJ,wBAAIL,UAAU,YACV,kBAACI,EAAA,EAAD,CAAMJ,UAAU,WAAWK,GAAG,UAA9B,YAgBZ,OAJG6B,EADHE,GAAiBC,EACAC,EAEDE,EAGZ,yBAAKxC,UAAU,uDACf,yBAAKA,UAAU,aACX,kBAACI,EAAA,EAAD,CAAMJ,UAAU,eAAeK,GAAG,KAAlC,oCAGA,4BAAQL,UAAU,iBAAiBV,KAAK,SAAWmD,cAAY,WAAWC,cAAY,eAClF,0BAAM1C,UAAU,yBAEjBkC,Q,GAzEE1B,aAwFLC,eAHU,SAAAY,GAAK,MAAI,CAC7Bc,SAAUd,EAAMc,YAEmB,CAACP,UAA1BnB,CAAoCsB,G,qECzF9CY,E,kDAEF,aAAc,IAAD,8BACT,gBAEKtB,MAAO,CACRnB,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyC,WAAW,GACXC,SAAU,GACVC,OAAO,IAGX,EAAKC,SAAU,EAAKA,SAASxC,KAAd,gBACf,EAAKyC,SAAU,EAAKA,SAASzC,KAAd,gBAbN,E,sEAgBY0C,GACnBA,EAAUH,QACT/C,KAAKmD,SAAS,CAAEJ,OAASG,EAAUH,W,+BAIlCK,GACJpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAG7CH,GACLA,EAAMI,iBAEN,IAAMC,EAAY,CACjBtD,YAAaH,KAAKsB,MAAMnB,YACxBD,kBAAmBF,KAAKsB,MAAMpB,kBAC9BE,YAAaJ,KAAKsB,MAAMlB,YACxByC,WAAW7C,KAAKsB,MAAMuB,WACtBC,SAAW9C,KAAKsB,MAAMwB,UAGzB9C,KAAKF,MAAMf,cAAc0E,EAAWzD,KAAKF,MAAMb,W,+BAItC,IAEE8D,EAAU/C,KAAKsB,MAAfyB,OACZ,OACA,6BACA,yBAAK9C,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAMgD,SAAUjD,KAAKiD,UACjB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAA+B,CAAC,aAAcX,EAAO5C,cAAewD,YAAY,eACzHL,KAAK,cACLC,MAAOvD,KAAKsB,MAAMnB,YAClB6C,SAAUhD,KAAKgD,WACfD,EAAO5C,aACJ,yBAAKF,UAAU,oBAAoB8C,EAAO5C,cAIjD,yBAAKF,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BACzC,CAAC,aAAcX,EAAO7C,oBAAqByD,YAAY,oBACvDL,KAAK,oBACLC,MAAOvD,KAAKsB,MAAMpB,kBAClB8C,SAAUhD,KAAKgD,WACdD,EAAO7C,mBACH,yBAAKD,UAAU,oBAAoB8C,EAAO7C,oBAInD,yBAAKD,UAAU,cACX,8BAAUA,UAAWyD,IAAW,+BAA+B,CAAC,aAAcX,EAAO3C,cAAeuD,YAAY,sBAChHL,KAAK,cACLC,MAAOvD,KAAKsB,MAAMlB,YAClB4C,SAAUhD,KAAKgD,WACdD,EAAO3C,aACJ,yBAAKH,UAAU,oBAAoB8C,EAAO3C,cAGlD,0CACA,yBAAKH,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAU,+BAA+BqD,KAAK,aACjEC,MAAOvD,KAAKsB,MAAMuB,WAClBG,SAAUhD,KAAKgD,YAEnB,kDACA,yBAAK/C,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAU,+BAA+BqD,KAAK,WACjEC,MAAOvD,KAAKsB,MAAMwB,SAClBE,SAAUhD,KAAKgD,YAGnB,2BAAOzD,KAAK,SAASU,UAAU,6C,GAlG9BQ,aAsHTC,eAJQ,SAAAY,GAAK,MAAI,CACzByB,OAAQzB,EAAMyB,UAGmB,CAAChE,iBAA1B2B,CAA2CkC,G,gBCzHnDgB,EAAc,G,QCAhBA,EAAe,CACjB1C,SAAU,GACVlC,QAAS,ICFP4E,EAAc,CACfC,cAAgB,GAChBC,aAAe,ICDbF,EAAc,CAEhBtB,KAAM,GACLD,eAAgB,GAGd0B,EAAsB,SAACvE,GACzB,QAAGA,GCLMwE,cAAgB,CAC3BjB,OJFc,WAAqC,IAA5BzB,EAA2B,uDAArBsC,EAAcK,EAAO,uCAEjD,OAAOA,EAAO1E,MAEX,IRTkB,aQUb,OAAQ0E,EAAOzE,QAEpB,QACG,OAAO8B,IILdtC,QHAW,WAAyC,IAA/BsC,EAA8B,uDAAtBsC,EAAcK,EAAQ,uCAEnD,OAAQA,EAAO1E,MAEX,ITXoB,eSYhB,OAAO,2BACA+B,GADP,IAEIJ,SAAU+C,EAAOzE,UAGzB,IThBmB,cSiBf,OAAO,2BACA8B,GADP,IAEItC,QAASiF,EAAOzE,UAEvB,ITpBoB,iBSqBf,OAAO,2BACL8B,GADF,IAEDJ,SAASI,EAAMJ,SAASgD,QACpB,SAAAlF,GAAO,OAAIA,EAAQkB,oBAAqB+D,EAAOzE,aAKxD,QACI,OAAO8B,IGxBf6C,QFAY,WAAsC,IAA7B7C,EAA4B,uDAArBsC,EAAcK,EAAO,uCAEhD,OAAOA,EAAO1E,MACP,IVJgB,eUKb,OAAO,2BACC+B,GADR,IAEKuC,cAAeI,EAAOzE,UAE7B,IVRmB,mBUShB,kCACQ8B,GADR,IAEKwC,aAAcG,EAAOzE,UAE3B,IVZoB,sBUaf,kCACO8B,GADP,IAEIuC,cAAcvC,EAAMuC,cAAcK,QAAO,SAAAJ,GACtC,OAAOA,EAAaM,kBAAoBH,EAAOzE,aAIjE,QACI,OAAO8B,IErBhBc,SDOa,WAAuC,IAA7Bd,EAA4B,uDAArBsC,EAAcK,EAAO,uCAEnD,OAAOA,EAAO1E,MAEV,IXNwB,mBWOpB,kCACO+B,GADP,IAEIe,cAAiB0B,EAAqBE,EAAOzE,SAC7C8C,KAAO2B,EAAOzE,UAGtB,QACK,OAAO8B,MExBXsC,EAAc,GACdS,EAAY,CAACC,KAIXC,EAAsB5D,OAAO6D,8BACpC7D,OAAO6D,+BAkBQC,EAhBb9D,OAAO+D,UAAUC,UAAUC,SAAS,WAAaL,EACvCM,YACJC,EACAlB,EACAmB,YAAQC,IAAe,WAAf,EAAmBX,GAC3BE,IAGAM,YACJC,EACAlB,EACAmB,YAAQC,IAAe,WAAf,EAAmBX,KCjB7BY,E,kDAEF,aAAc,IAAD,8BACT,gBAEK3D,MAAM,CACPzB,GAAG,GACHM,YAAa,GACbD,kBAAmB,GACnBE,YAAa,GACbyC,WAAW,GACXC,SAAU,GACVC,OAAO,IAGX,EAAKC,SAAU,EAAKA,SAASxC,KAAd,gBACf,EAAKyC,SAAY,EAAKA,SAASzC,KAAd,gBAdR,E,sEAiBc0C,GACpBA,EAAUH,QACT/C,KAAKmD,SAAS,CAACJ,OAAQG,EAAUH,SAFJ,MAW5BG,EAAUlE,QANZa,EAL8B,EAK9BA,GACAM,EAN8B,EAM9BA,YACAD,EAP8B,EAO9BA,kBACAE,EAR8B,EAQ9BA,YACAyC,EAT8B,EAS9BA,WACAC,EAV8B,EAU9BA,SAGF9C,KAAKmD,SAAS,CACXtD,KACAM,cACAD,oBACAE,cACAyC,aACAC,e,+BAIEM,GACLpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAG7CH,GACLA,EAAMI,iBAET,IAAM0B,EAAe,CAClBrF,GAAGG,KAAKsB,MAAMzB,GACdM,YAAaH,KAAKsB,MAAMnB,YACxBD,kBAAmBF,KAAKsB,MAAMpB,kBAC9BE,YAAaJ,KAAKsB,MAAMlB,YACxByC,WAAW7C,KAAKsB,MAAMuB,WACtBC,SAAU9C,KAAKsB,MAAMwB,UAExB9C,KAAKF,MAAMf,cAAcmG,EAAclF,KAAKF,MAAMb,W,0CAG9B,IACTY,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACRG,KAAKF,MAAMuF,WAAWxF,EAAIG,KAAKF,MAAMb,W,+BAE/B,IAEC8D,EAAU/C,KAAKsB,MAAfyB,OAEH,OACA,yBAAK9C,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,uBACA,6BACA,0BAAMgD,SAAUjD,KAAKiD,UACjB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,gCAAiC,CAAC,aAAaX,EAAO5C,cAAewD,YAAY,eAC1HL,KAAK,cACLC,MAAOvD,KAAKsB,MAAMnB,YAClB6C,SAAUhD,KAAKgD,WACdD,EAAO5C,aACA,yBAAKF,UAAU,oBAAoB8C,EAAO5C,cAItD,yBAAKF,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAA+B,CAAC,aAAaX,EAAO7C,oBAAqByD,YAAY,oBAC5HL,KAAK,oBACLC,MAAOvD,KAAKsB,MAAMpB,kBAClB8C,SAAUhD,KAAKgD,SACbsC,UAAQ,IACPvC,EAAO7C,mBACJ,yBAAKD,UAAU,oBAAoB8C,EAAO7C,oBAKtD,yBAAKD,UAAU,cACX,8BAAUA,UAAWyD,IAAW,+BAA+B,CAAC,aAAcX,EAAO3C,cAAeuD,YAAY,sBAChHL,KAAK,cACLC,MAAOvD,KAAKsB,MAAMlB,YAClB4C,SAAUhD,KAAKgD,WAElBD,EAAO3C,aACJ,yBAAKH,UAAU,oBAAoB8C,EAAO3C,cAI9C,0CACA,yBAAKH,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,gCAAiCJ,KAAK,aAC/EC,MAAOvD,KAAKsB,MAAMuB,WAClBG,SAAUhD,KAAKgD,YAEnB,kDACA,yBAAK/C,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,gCAAiCJ,KAAK,WAC/EC,MAAOvD,KAAKsB,MAAMwB,SAClBE,SAAUhD,KAAKgD,YAGnB,2BAAOzD,KAAK,SAASU,UAAU,4C,GA1HnCQ,aAgJbC,eAJS,SAAAY,GAAK,MAAK,CAC9BtC,QAASsC,EAAMtC,QAAQA,QACvB+D,OAAQzB,EAAMyB,UAEsB,CAAEsC,WfzHhB,SAACxF,EAAIZ,GAAL,8CAAiB,WAAMC,GAAN,eAAAC,EAAA,+EAGJC,IAAMmC,IAAN,uBAA0B1B,IAHtB,OAGrBJ,EAHqB,OAK3BP,EAAS,CACDK,KClCG,cDmCHC,QAASC,EAASC,OAPC,gDAU3BT,EAAQK,KAAK,cAVc,yDAAjB,uDeyH2BP,iBAAtC2B,CAAuDuE,GCjJhEM,G,4MAEF3F,cAAe,SAACM,EAAkBkE,GAC5B,EAAKtE,MAAM0F,uDAAuDtF,EAAkBkE,I,uDAGlF,IAIHqB,EACAC,EAHKC,EAAsB3F,KAAKF,MAA3B6F,iBAmBV,OAdgC,IAA5BA,EAAiBC,WACjBF,EAAe,uBACfD,EAAgB,QAGY,IAA5BE,EAAiBC,WAChBF,EAAe,wBACfD,EAAgB,UAEY,IAA5BE,EAAiBC,WACfF,EAAe,wBACdD,EAAgB,OAKnB,yBAAKxF,UAAU,sBAEX,yBAAKA,UAAS,mCAA8ByF,IAA5C,OACSC,EAAiBvB,gBAD1B,iBAEgBqB,GAEhB,yBAAKxF,UAAU,sBACX,wBAAIA,UAAU,cAAc0F,EAAiBE,SAC7C,uBAAG5F,UAAU,4BACR0F,EAAiBG,oBAEtB,kBAACzF,EAAA,EAAD,CAAMC,GAAE,6BAAwBqF,EAAiBzF,kBAAzC,YAA8DyF,EAAiBvB,iBAAmBnE,UAAU,mBAApH,iBAIA,4BAAQA,UAAU,sBAAsBM,QAASP,KAAKJ,cAAcY,KAAKR,KAAK2F,EAAiBzF,kBAAkByF,EAAiBvB,kBAAlI,gB,GA5CS3D,aA0DXC,eAAQ,KAAM,CAAC8E,uDCQwC,SAACtF,EAAkBkE,GAAnB,8CAAuC,WAAMlF,GAAN,SAAAC,EAAA,0DAEvGwB,OAAOC,QAAP,+CAAuDwD,EAAvD,8BAFuG,gCAGjGhF,IAAMyB,OAAN,uBAA6BX,EAA7B,YAAkDkE,IAH+C,OAItGlF,EAAS,CACJK,KhBnEuB,sBgBoEvBC,QAAS4E,IANwF,2CAAvC,wDDRvD1D,CAAyE6E,IEMzEQ,G,uKAtDZ,IAZS,IAICC,EAF2BhG,KAAKF,MAA/BmG,oBAE2B7E,KAAK,SAAA0C,GAAY,OAC/C,kBAAC,GAAD,CAAczC,IAAKyC,EAAajE,GAAI8F,iBAAkB7B,OAGzDoC,EAAY,GACbC,EAAkB,GAClBC,EAAgB,GAEZC,EAAE,EAAGA,EAAEL,EAAMM,OAAQD,IACxBE,QAAQC,IAAIR,EAAMK,IAC0B,UAA1CL,EAAMK,GAAGvG,MAAM6F,iBAAiBc,QAClCP,EAAU5G,KAAK0G,EAAMK,IAGwB,gBAA1CL,EAAMK,GAAGvG,MAAM6F,iBAAiBc,QAC9BN,EAAgB7G,KAAK0G,EAAMK,IAGc,SAA1CL,EAAMK,GAAGvG,MAAM6F,iBAAiBc,QAC/BL,EAAc9G,KAAK0G,EAAMK,IAIlC,OAGI,yBAAKpG,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,uCACX,uCAGPiG,GAKL,yBAAKjG,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qCACX,6CAGLkG,GAEP,yBAAKlG,UAAU,YACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,qCACX,sCAGPmG,S,GA1DE3F,aCIjBiG,G,kDAIL,aAAc,IAAD,8BACV,gBAEKpF,MAAO,CACTyB,OAAQ,IAJD,E,gEAQQ,IACPlD,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACVG,KAAKF,MAAM6G,kCAAkC9G,K,gDAGrBqD,GACpBA,EAAUH,QACV/C,KAAKmD,SAAS,CAAEJ,OAASG,EAAUH,W,+BAGhC,IAQH6D,EANG/G,EAAQG,KAAKF,MAAMqF,MAAMC,OAAzBvF,GAECgE,EAAmB7D,KAAKF,MAAMgE,aAA9BD,cA6BT,OAFE+C,EArByB,SAAC7D,EAAQc,GAC5B,OAAGA,EAAcyC,OAAQ,EAEnBvD,EAAO7C,kBAED,yBAAKD,UAAU,iCAAiC4G,KAAK,SAClD9D,EAAO7C,mBAKZ,yBAAKD,UAAU,+BAA+B4G,KAAK,SAAnD,iCAME,kBAAC,GAAD,CAAUZ,oBAAsBpC,IAInCiD,CAzBG9G,KAAKsB,MAAhByB,OAyB+Bc,GAItC,yBAAK5D,UAAU,aACf,kBAACI,EAAA,EAAD,CAAMC,GAAE,0BAAqBT,GAAMI,UAAU,wBACzC,uBAAGA,UAAU,sBAAb,yBAEJ,6BACA,6BACA2G,O,GA/DqBnG,aA+EXC,gBAJS,SAAAY,GAAK,MAAI,CAC9BwC,aAAexC,EAAM6C,QACrBpB,OAASzB,EAAMyB,UAEsB,CAAC4D,kCF9DS,SAAAI,GAAqB,8CAAI,WAAM7H,GAAN,eAAAC,EAAA,+EAG5CC,IAAMmC,IAAN,uBAA0BwF,IAHkB,OAG7DtH,EAH6D,OAIhEP,EAAS,CACLK,KhBrBY,egBsBZC,QAAUC,EAASC,OANyC,gDAUpER,EAAS,CACJK,KhBnCa,agBoCbC,QAAS,KAAMC,SAASC,OAZuC,yDAAJ,wDE8DxDgB,CAA+DgG,IC/ExEM,G,kDAEH,WAAYlH,GAAO,IAAD,0BAIND,GAHP,cAAMC,IAGaA,MAAMqF,MAAMC,OAAxBvF,GAJM,OAMf,EAAKyB,MAAO,CACXuE,QAAU,GACVC,mBAAqB,GACrBmB,QAAU,GACVrB,SAAU,EACVa,OAAQ,GACRvG,kBAAkBL,EAClBkD,OAAQ,IAGV,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAjBA,E,qDAoBT4C,GACHpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAG9CH,GACLA,EAAMI,iBAEN,IAAM0D,EAAa,CACfrB,QAAU7F,KAAKsB,MAAMuE,QACrBC,mBAAqB9F,KAAKsB,MAAMwE,mBAChCmB,QAAUjH,KAAKsB,MAAM2F,QACrBrB,SAAU5F,KAAKsB,MAAMsE,SACrBa,OAAQzG,KAAKsB,MAAMmF,QAGvBzG,KAAKF,MAAMqH,qCAAqCnH,KAAKsB,MAAMpB,kBAAkBgH,EAAkElH,KAAKF,MAAMb,W,gDAEnIiE,GACnBA,EAAUH,QACT/C,KAAKmD,SAAS,CAACJ,OAAQG,EAAUH,W,+BAIlC,IAEGlD,EAAOG,KAAKF,MAAMqF,MAAMC,OAAxBvF,GACCkD,EAAW/C,KAAKsB,MAAhByB,OAEZ,OACI,yBAAK9C,UAAU,WACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAACI,EAAA,EAAD,CAAMC,GAAE,wBAAmBT,GAAMI,UAAU,iBAA3C,yBAGA,wBAAIA,UAAU,yBAAd,qBACA,uBAAGA,UAAU,oBAAb,+BACA,0BAAOgD,SAAUjD,KAAKiD,UAClB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OACZU,UAAWyD,IAAW,+BAAgC,CAAC,aAAcX,EAAO8C,UAAWvC,KAAK,UAAUK,YAAY,uBACjHJ,MAAOvD,KAAKsB,MAAMuE,QAClB7C,SAAUhD,KAAKgD,WACdD,EAAO8C,SACJ,yBAAK5F,UAAU,oBAAoB8C,EAAO8C,UAGnD,yBAAK5F,UAAU,cACX,8BAAUA,UAAWyD,IAAW,+BAA+B,CAAC,aAAaX,EAAO+C,qBACpFnC,YAAY,sBAAsBL,KAAK,qBACrCC,MAAQvD,KAAKsB,MAAMwE,mBACnB9C,SAAUhD,KAAKgD,WACpBD,EAAO+C,oBACH,yBAAK7F,UAAU,oBAAoB8C,EAAO+C,qBAG/C,wCACA,yBAAK7F,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAU,+BAA+BqD,KAAK,UACjEC,MAAOvD,KAAKsB,MAAM2F,QAClBjE,SAAUhD,KAAKgD,YAEnB,yBAAK/C,UAAU,cACX,4BAAQA,UAAU,+BAA+BqD,KAAK,WACtDC,MAAOvD,KAAKsB,MAAMsE,SAClB5C,SAAUhD,KAAKgD,UACX,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIR,yBAAKtD,UAAU,cACX,4BAAQA,UAAU,+BAA+BqD,KAAK,SACtDC,MAAOvD,KAAKsB,MAAMmF,OAClBzD,SAAUhD,KAAKgD,UACX,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIR,2BAAOhE,KAAK,SAASU,UAAU,4C,GA3GzBQ,aA+HfC,gBAJU,SAAAY,GAAK,MAAI,CAC9ByB,OAASzB,EAAMyB,UAGqB,CAACoE,qCHlIW,SAACJ,EAAuBG,EAAajI,GAArC,8CAAiD,WAAMC,GAAN,SAAAC,EAAA,+EAGzFC,IAAMC,KAAN,uBAA2B0H,GAAyBG,GAHqC,OAI7FjI,EAAQK,KAAR,wBAA8ByH,IAC9B7H,EAAS,CACLK,KhBVc,agBWdC,QAAQ,KAPiF,gDAU7FN,EAAS,CACLK,KhBfc,agBgBdC,QAAU,KAAMC,SAASC,OAZgE,yDAAjD,wDGkIrCgB,CAAkEsG,IC/H3EI,G,kDAEF,aAAc,IAAD,8BACT,gBAGK9F,MAAO,CACRzB,GAAI,GACJuE,gBAAiB,GACjByB,QAAS,GACTC,mBAAmB,GACnBW,OAAQ,GACRb,SAAU,GACVqB,QAAS,GACT/G,kBAAmB,GACnBmH,UAAU,GACVtE,OAAO,IAGb,EAAKC,SAAU,EAAKA,SAASxC,KAAd,gBACf,EAAKyC,SAAY,EAAKA,SAASzC,KAAd,gBAlBN,E,gEAsBQ,IAAD,EAC+BR,KAAKF,MAAMqF,MAAMC,OAAxDlF,EADQ,EACRA,kBAAmBkE,EADX,EACWA,gBAC3BpE,KAAKF,MAAMwH,oDAAoDpH,EAAmBkE,EAAiBpE,KAAKF,MAAMb,W,gDAGvFiE,GAEpBA,EAAUH,QACT/C,KAAKmD,SAAS,CAACJ,OAASG,EAAUH,SAHL,MAe5BG,EAAUqE,YATX1H,EAN6B,EAM7BA,GACAuE,EAP6B,EAO7BA,gBACAyB,EAR6B,EAQ7BA,QACAC,EAT6B,EAS7BA,mBACAW,EAV6B,EAU7BA,OACAb,EAX6B,EAW7BA,SACAqB,EAZ6B,EAY7BA,QACA/G,EAb6B,EAa7BA,kBACAmH,EAd6B,EAc7BA,UAGDrH,KAAKmD,SAAS,CACbtD,KACAuE,kBACAyB,UACAC,qBACAW,SACAb,WACAqB,UACA/G,oBACAmH,gB,+BAIIjE,GACHpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAG9CH,GACJA,EAAMI,iBAEN,IAAMgE,EAAmB,CACnB3H,GAAGG,KAAKsB,MAAMzB,GACZuE,gBAAiBpE,KAAKsB,MAAM8C,gBAC5ByB,QAAS7F,KAAKsB,MAAMuE,QACpBC,mBAAqB9F,KAAKsB,MAAMwE,mBAChCW,OAASzG,KAAKsB,MAAMmF,OACpBb,SAAW5F,KAAKsB,MAAMsE,SACtBqB,QAAUjH,KAAKsB,MAAM2F,QACrB/G,kBAAmBF,KAAKsB,MAAMpB,kBAC9BmH,UAAYrH,KAAKsB,MAAM+F,WAG/BrH,KAAKF,MAAM2H,uDAAuDzH,KAAKsB,MAAMpB,kBAAkBF,KAAKsB,MAAM8C,gBAAgBoD,EAAkBxH,KAAKF,MAAMb,W,+BAErJ,IAAD,EAEgCe,KAAKsB,MAAlCyB,EAFH,EAEGA,OAAO7C,EAFV,EAEUA,kBACf,OAEI,yBAAKD,UAAU,WACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAACI,EAAA,EAAD,CAAMC,GAAE,wBAAmBJ,GAAqBD,UAAU,iBAA1D,yBAGA,wBAAIA,UAAU,yBAAd,uBACA,uBAAGA,UAAU,oBAAb,iBAA+CD,KAAKsB,MAAMpB,kBAA1D,sBAAgGF,KAAKsB,MAAM8C,iBAC3G,0BAAOnB,SAAUjD,KAAKiD,UAClB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAA+B,CAAC,aAAaX,EAAO8C,UAAWvC,KAAK,UAAUK,YAAY,uBACjIJ,MAAOvD,KAAKsB,MAAMuE,QAClB7C,SAAUhD,KAAKgD,WACdD,EAAO8C,SACL,yBAAK5F,UAAU,oBAAoB8C,EAAO8C,UAInD,yBAAK5F,UAAU,cACX,8BAAUA,UAAWyD,IAAW,+BAAgC,CAAC,aAAcX,EAAO+C,qBAAsBnC,YAAY,sBAAsBL,KAAK,qBAClJC,MAAOvD,KAAKsB,MAAMwE,mBAClB9C,SAAUhD,KAAKgD,WACdD,EAAO+C,oBACF,yBAAK7F,UAAU,oBAAoB8C,EAAO+C,qBAGrD,wCACA,yBAAK7F,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAU,+BAA+BqD,KAAK,UAChEC,MAAOvD,KAAKsB,MAAM2F,QAClBjE,SAAUhD,KAAKgD,YAEpB,yBAAK/C,UAAU,cACX,4BAAQA,UAAU,+BAA+BqD,KAAK,WAAWC,MAAOvD,KAAKsB,MAAMsE,SAAU5C,SAAUhD,KAAKgD,UACxG,4BAAQO,MAAO,GAAf,mBACA,4BAAQA,MAAO,GAAf,QACA,4BAAQA,MAAO,GAAf,UACA,4BAAQA,MAAO,GAAf,SAIR,yBAAKtD,UAAU,cACX,4BAAQA,UAAU,+BAA+BqD,KAAK,SAASC,MAAOvD,KAAKsB,MAAMmF,OAAQzD,SAAUhD,KAAKgD,UACpG,4BAAQO,MAAM,IAAd,iBACA,4BAAQA,MAAM,SAAd,SACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,QAAd,UAIR,2BAAOhE,KAAK,SAASU,UAAU,4C,GAxI/BQ,aA+JjBC,gBALS,SAAAY,GAAK,MAAK,CAC9BiG,YAAYjG,EAAM6C,QAAQL,aAC1Bf,OAAQzB,EAAMyB,UAGqB,CAAEuE,oDJ5H4B,SAACpH,EAAkBkE,EAAgBnF,GAAnC,8CAA+C,WAAMC,GAAN,eAAAC,EAAA,+EAGlFC,IAAMmC,IAAN,uBAA0BrB,EAA1B,YAA+CkE,IAHmC,OAGnG3E,EAHmG,OAIxGP,EAAS,CACLK,KhBtCgB,mBgBuChBC,QAAQC,EAASC,OANmF,gDAS1GT,EAAQK,KAAK,cAT6F,yDAA/C,uDI4HyBmI,uDJ/GrB,SAACvH,EAAkBkE,EAAgB8C,EAAYjI,GAA/C,8CAA2D,WAAMC,GAAN,SAAAC,EAAA,+EAGhGC,IAAMsI,MAAN,uBAA4BxH,EAA5B,YAAiDkE,GAAkB8C,GAH6B,cAIrHjI,EAAQK,KAAR,wBAA8BY,IAC9BhB,EAAS,CACJK,KhB7DM,agB8DNC,QAAS,KAPuG,gDAUvHN,EAAS,CACLK,KhBlES,agBmETC,QAAS,KAAMC,SAASC,OAZ2F,yDAA3D,wDI+G1DgB,CAAwI0G,IChKhJO,G,kLAGG3H,KAAKF,MAAMsC,SAASC,eACnBrC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAI/B,OACI,yBAAKW,UAAU,WACf,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,kBAAd,oCACA,uBAAGA,UAAU,QAAb,iEAGA,6BACA,kBAACI,EAAA,EAAD,CAAMC,GAAG,YAAYL,UAAU,+BAA/B,WAGA,kBAACI,EAAA,EAAD,CAAMC,GAAG,SAASL,UAAU,iCAA5B,kB,GAtBGQ,aA0CZC,gBAJU,SAAAY,GAAK,MAAI,CAC7Bc,SAAWd,EAAMc,YAGP1B,CAAyBiH,IC1ClCC,G,kDAEF,aAAe,IAAD,8BACV,gBAEKtG,MAAQ,CACTuG,SAAU,GACVrF,SAAU,GACVsF,SAAU,GACVC,gBAAiB,GACjBhF,OAAQ,IAGZ,EAAKC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAZN,E,gEAgBPR,KAAKF,MAAMsC,SAASC,eACnBrC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAKvB8D,GACLpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAG5CH,GACLA,EAAMI,iBAEL,IAAMwE,EAAS,CACZH,SAAU7H,KAAKsB,MAAMuG,SACrBrF,SAASxC,KAAKsB,MAAMkB,SACpBsF,SAAS9H,KAAKsB,MAAMwG,SACpBC,gBAAgB/H,KAAKsB,MAAMyG,iBAG9B/H,KAAKF,MAAMmI,aAAaD,EAAShI,KAAKF,MAAMb,W,gDAItBiE,GAClBA,EAAUH,QACN/C,KAAKmD,SAAS,CAAEJ,OAASG,EAAUH,W,+BAItC,IAEIA,EAAW/C,KAAKsB,MAAhByB,OACV,OACI,yBAAK9C,UAAU,YACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,WACA,uBAAGA,UAAU,oBAAb,uBACA,0BAAMgD,SAAUjD,KAAKiD,UACjB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAAgC,CAAC,aAAcX,EAAOP,WAAYmB,YAAY,aAAaL,KAAK,WACrIC,MAAOvD,KAAKsB,MAAMkB,SAClBQ,SAAUhD,KAAKgD,WAEfD,EAAOP,UACD,yBAAKvC,UAAW,oBAAoB8C,EAAOP,WAMzD,yBAAKvC,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAA+B,CACpE,aAAcX,EAAO8E,WAAYlE,YAAY,2BAA2BL,KAAK,WAChFC,MAAOvD,KAAKsB,MAAMuG,SAClB7E,SAAUhD,KAAKgD,WAERD,EAAO8E,UACF,yBAAM5H,UAAU,oBAAoB8C,EAAO8E,WAI5D,yBAAK5H,UAAU,cACX,2BAAOV,KAAK,WAAWU,UAAWyD,IAAW,+BAA+B,CACxE,aAAcX,EAAO+E,WAAYnE,YAAY,WAAWL,KAAK,WACjEC,MAAQvD,KAAKsB,MAAMwG,SACnB9E,SAAUhD,KAAKgD,WAEXD,EAAO+E,UACF,yBAAK7H,UAAU,oBAAoB8C,EAAO+E,WAKvD,yBAAK7H,UAAU,cACX,2BAAOV,KAAK,WAAWU,UAAWyD,IAAW,+BAA+B,CACxE,aAAcX,EAAOgF,kBAAmBpE,YAAY,mBACpDL,KAAK,kBACLC,MAAOvD,KAAKsB,MAAMyG,gBAClB/E,SAAUhD,KAAKgD,WAGXD,EAAOgF,iBACF,yBAAK9H,UAAU,oBAAoB8C,EAAOgF,kBAK3D,2BAAOxI,KAAK,SAASU,UAAU,yC,GA5GxCQ,aAiIPC,gBALQ,SAAAY,GAAK,MAAI,CAC9ByB,OAASzB,EAAMyB,OACfX,SAAWd,EAAMc,YAGoB,CAAC6F,ajBhIf,SAACD,EAAQ/I,GAAT,8CAAoB,WAAMC,GAAN,SAAAC,EAAA,+EAGjCC,IAAMC,KAAK,sBAAsB2I,GAHA,OAIvC/I,EAAQK,KAAK,UACbJ,EAAS,CACLK,KLbe,aKcfC,QAAQ,KAP2B,gDAUvCN,EAAS,CACLK,KLlBe,aKmBfC,QAAS,KAAMC,SAASC,OAZW,yDAApB,wDiBgIVgB,CAAwCkH,ICjIlDM,G,kDAED,aAAc,IAAD,8BACR,gBAEK5G,MAAO,CACTuG,SAAW,GACXC,SAAW,GACX/E,OAAQ,IAGV,EAAKC,SAAU,EAAKA,SAASxC,KAAd,gBACf,EAAKyC,SAAW,EAAKA,SAASzC,KAAd,gBAVT,E,gEAcPR,KAAKF,MAAMsC,SAASC,eACnBrC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAIzB8D,GACLpD,KAAKmD,SAAL,eAAgBC,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAE9CH,GACJA,EAAMI,iBAEL,IAAM2E,EAAU,CACZN,SAAW7H,KAAKsB,MAAMuG,SACtBC,SAAW9H,KAAKsB,MAAMwG,UAG1B9H,KAAKF,MAAMsI,MAAMD,K,gDAGGjF,GACnBA,EAAUH,QACN/C,KAAKmD,SAAS,CAAEJ,OAASG,EAAUH,SAEvCG,EAAUd,SAASC,eACpBrC,KAAKF,MAAMb,QAAQK,KAAK,gB,+BAIhB,IAEEyD,EAAW/C,KAAKsB,MAAhByB,OACR,OACI,yBAAK9C,UAAU,SACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,yBAAd,UACA,0BAAMgD,SAAWjD,KAAKiD,UAClB,yBAAKhD,UAAU,cACX,2BAAOV,KAAK,OAAOU,UAAWyD,IAAW,+BAA+B,CAAC,aAAcX,EAAO8E,WAAYlE,YAAY,gBAAgBL,KAAK,WAC1IC,MAAOvD,KAAKsB,MAAMuG,SAClB7E,SAAUhD,KAAKgD,WACVD,EAAO8E,UACL,yBAAK5H,UAAU,oBAAoB8C,EAAO8E,WAGtD,yBAAK5H,UAAU,cACX,2BAAOV,KAAK,WAAWU,UAAWyD,IAAW,+BAA+B,CAAC,aAAcX,EAAO+E,WAAYnE,YAAY,WAAWL,KAAK,WACzIC,MAAQvD,KAAKsB,MAAMwG,SACnB9E,SAAUhD,KAAKgD,WACdD,EAAO+E,UACL,yBAAK7H,UAAU,oBAAoB8C,EAAO+E,WAGlD,2BAAOvI,KAAK,SAASU,UAAU,yC,GAtE3CQ,aA4FJC,gBALS,SAAAY,GAAK,MAAI,CAC9ByB,OAASzB,EAAMyB,OACfX,SAAUd,EAAMc,YAGqB,CAACgG,MlBtEpB,SAAAC,GAAY,8CAAI,WAAMnJ,GAAN,mBAAAC,EAAA,+EAIlBC,IAAMC,KAAK,mBAAoBgJ,GAJb,OAI9BC,EAJ8B,OAQxB7G,EAAU6G,EAAI5I,KAAd+B,MAGbK,aAAayG,QAAQ,WAAW9G,GAIhCD,EAAcC,GAGL+G,EAAUC,IAAWhH,GAG3BvC,EAAU,CACLK,KLnCuB,mBKoCvBC,QAAUgJ,IAvBmB,kDA2B5BtJ,EAAS,CACJK,KLxDW,aKyDXC,QAAQ,KAAMC,SAASC,OA7BA,0DAAJ,wDkBsElBgB,CAAkCwH,I,kBChFlCxH,gBAJS,SAAAY,GAAK,MAAI,CAC7Bc,SAAWd,EAAMc,YAGN1B,EAbM,SAAC,GAAD,IAAeD,EAAf,EAAIiI,UAAsBtG,EAA1B,EAA0BA,SAAauG,EAAvC,gDACjB,kBAACC,EAAA,EAAD,iBAAYD,EAAZ,CAAwBE,OAAU,SAAA/I,GAAK,OAA8B,IAA1BsC,EAASC,cAAyB,kBAAC5B,EAAeX,GAAc,kBAACgJ,GAAA,EAAD,CAAWxI,GAAG,kBCkBxHyI,GAAWjH,aAAaiH,SAE9B,GAAIA,GAAU,CACZvH,EAAcuH,IACd,IAAMP,GAAUC,IAAWM,IAE3BtE,EAAMvF,SAAS,CACbK,KzBhB4B,mByBiB5BC,QAASgJ,KAGX,IAAMQ,GAAmBC,KAAKC,MAAQ,IAElCV,GAAQW,IAAMH,KAChBvE,EAAMvF,SAAS2C,KACflB,OAAOsB,SAASC,KAAO,K,IAsCZkH,G,uKA9BX,OACE,kBAAC,IAAD,CAAU3E,MAAOA,GACf,kBAAC,IAAD,KACE,yBAAKxE,UAAU,OACb,kBAAC,EAAD,MAKA,kBAAC2I,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,IAAIZ,UAAWf,KACjC,kBAACiB,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,YAAYZ,UAAWd,KACzC,kBAACgB,EAAA,EAAD,CAAOS,OAAK,EAACC,KAAK,SAASZ,UAAWR,KAItC,kBAACqB,EAAA,EAAD,KACE,kBAAC,GAAD,CAAcF,OAAK,EAACC,KAAK,aAAaZ,UAAW1H,IACjD,kBAAC,GAAD,CAAcqI,OAAK,EAACC,KAAK,cAAcZ,UAAW9F,IAClD,kBAAC,GAAD,CAAcyG,OAAK,EAACC,KAAK,qBAAqBZ,UAAWzD,IACzD,kBAAC,GAAD,CAAcoE,OAAK,EAACC,KAAK,oBAAoBZ,UAAWhC,KACxD,kBAAC,GAAD,CAAc2C,OAAK,EAACC,KAAK,sBAAsBZ,UAAW1B,KAC1D,kBAAC,GAAD,CAAcqC,OAAK,EAACC,KAAK,yDAAyDZ,UAAWtB,a,GAxBzF3G,aChCE+I,QACW,cAA7B7I,OAAOsB,SAASwH,UAEe,UAA7B9I,OAAOsB,SAASwH,UAEhB9I,OAAOsB,SAASwH,SAAStE,MACvB,2DCXNuE,IAASb,OACP,kBAAC,IAAMc,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBnF,WACrBA,UAAUoF,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7D,QAAQ6D,MAAMA,EAAMC,c","file":"static/js/main.2bcf6a87.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from './types';\r\n\r\n\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n\r\n        try {\r\n                const response = await axios.post(\"/api/project\", project)\r\n                history.push(\"/dashboard\");\r\n                dispatch({\r\n                        type: GET_ERRORS,\r\n                        payload: {}\r\n                });\r\n        } catch (err) {\r\n                dispatch({\r\n                        type: GET_ERRORS,\r\n                        payload: err.response.data\r\n                });\r\n        }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n        const response = await axios.get(\"/api/project/all\");\r\n        dispatch({\r\n                type: GET_PROJECTS,\r\n                payload: response.data\r\n        });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n        try {\r\n                const response = await axios.get(`/api/project/${id}`)\r\n                // history.push(\"/dashboard\")\r\n                dispatch({\r\n                        type: GET_PROJECT,\r\n                        payload: response.data\r\n                });\r\n        } catch (errors) {\r\n                history.push(\"/dashboard\"); //trying to get the project that does not exist in the ui\r\n        }\r\n\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n        if(window.confirm(\r\n   \"Are you sure you want to delete ? It will delete your project and all the data related to it\" \r\n)\r\n){\r\n await axios.delete(`/api/project/${id}`)\r\n        dispatch({\r\n                type: DELETE_PROJECT,\r\n                payload: id\r\n          })\r\n        }\r\n       \r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT =\"DELETE_PROJECT\";\r\n\r\n\r\n\r\n//TYPES FOR  BACKLOG SETTING\r\nexport const GET_BACKLOGS = \"GET_BACKLOGS\";\r\n export const GET_PROJECT_TASK =\"GET_PROJECT_TASK\";\r\n export const DELETE_PROJECT_TASK =\"DELETE_PROJECT_TASK\";\r\n\r\n\r\n //Types for Security\r\n\r\n export  const SET_CURRENT_USER=\"SET_CURRENT_USER\";","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from \"prop-types\";\r\nimport {deleteProject} from '../../actions/projectActions';\r\n\r\nclass ProjectItem extends Component {\r\n\r\n  onDeleteClick = id =>{\r\n     this.props.deleteProject(id);\r\n  }\r\n  render() {\r\n\r\n     const { project } = this.props;\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p> {project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                 <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                 </Link>\r\n               \r\n                  <li className=\"list-group-item delete\" onClick ={this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                  </li>\r\n          \r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes ={\r\n  deleteProject : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(null,{deleteProject}) (ProjectItem);\r\n\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst createProjectButton =() =>{\r\n\r\n     return(\r\n         <React.Fragment>\r\n            <Link  to=\"/addProject\"  className=\"btn btn-lg btn-info\">\r\n              Create a Project\r\n            </Link>\r\n        </React.Fragment>\r\n     );\r\n}\r\n\r\nexport default createProjectButton;","import React, { Component } from 'react'\r\nimport ProjectItem from './Project/ProjectItem';\r\nimport CreateProjectButton from './Project/CreateProjectButton';\r\nimport { connect } from 'react-redux';\r\nimport { getProjects } from '../actions/projectActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Dashboard extends Component {\r\n    \r\n   componentDidMount(){\r\n         this.props.getProjects();\r\n   }\r\n    render() {\r\n    \r\n     const {projects} = this.props.project\r\n\r\n        return (\r\n    \r\n    <div className=\"projects\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n                <h1 className=\"display-4 text-center\">Projects</h1>\r\n                <br />\r\n                  <CreateProjectButton />\r\n                <br />\r\n                <hr />\r\n\r\n                {projects.map(project =>(\r\n                   <ProjectItem  key={project.id}  project={project}/>     \r\n                  ))  \r\n                }\r\n                  \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n);\r\n}\r\n}\r\n\r\nDashboard.propTypes ={\r\n    project : PropTypes.object.isRequired,\r\n    getProjects : PropTypes.func.isRequired\r\n};\r\n\r\n const mapStateToProps = state =>({\r\n    project: state.project\r\n });\r\n\r\nexport default connect(mapStateToProps,{getProjects}) (Dashboard);\r\n","\r\nimport axios from 'axios';\r\n\r\nconst setJWTHeaders = (token) =>{\r\n\r\n    if(token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    }else{\r\n         delete axios.defaults.headers.common[\"Authorization\"];\r\n    }\r\n};\r\n\r\nexport default setJWTHeaders;\r\n\r\n","import axios from 'axios';\r\nimport { SET_CURRENT_USER, GET_ERRORS} from './types';\r\n\r\nimport setJWTHeaders from '../SecurityUtils/setJWTHeaders';\r\n\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createNewser=(newUser,history) =>async dispatch =>{\r\n\r\n   try {\r\n       await axios.post(\"/api/users/register\",newUser);\r\n       history.push(\"/login\");\r\n       dispatch({\r\n           type:GET_ERRORS,\r\n           payload:{}\r\n       })\r\n   } catch (error) {\r\n       dispatch({\r\n           type:GET_ERRORS,\r\n           payload: error.response.data\r\n       });\r\n   }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n export const login = loginRequest => async dispatch =>{\r\n\r\n    try {\r\n        //Send a post request\r\n  const res = await axios.post(\"/api/users/login\", loginRequest);\r\n\r\n     //Extract token from the response\r\n\r\n      const { token } = res.data;\r\n\r\n    //Store the token to the local storage\r\n localStorage.setItem(\"JWTToken\",token);\r\n\r\n //set  the token in  the headers\r\n\r\n setJWTHeaders(token);\r\n\r\n//Then decode token on react to collect claims(details) of the user\r\n   const  decoded = jwt_decode(token);\r\n\r\n//dispatch th token to our security reducer\r\n    dispatch ({\r\n         type:SET_CURRENT_USER,\r\n         payload : decoded\r\n    });\r\n        \r\n    } catch (error) {\r\n          dispatch({\r\n               type: GET_ERRORS,\r\n               payload:error.response.data\r\n          });\r\n    }\r\n  \r\n };\r\n\r\n  export const logout =() => dispatch => {\r\n      localStorage.removeItem(\"JWTToken\");\r\n      setJWTHeaders(false);\r\n       dispatch({\r\n                type:SET_CURRENT_USER,\r\n                payload : {}\r\n       });\r\n\r\n  };\r\n\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { logout } from '../../actions/SecurityActions';\r\n\r\nclass Header extends Component{\r\n\r\n    logout(){\r\n        this.props.logout();\r\n        window.location.href =\"/\";\r\n    }\r\n\r\n     render(){\r\n\r\n       const { validateToken, user } = this.props.security;\r\n\r\n        const userIsAuthenticated =(\r\n                \r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/dashboard\">\r\n                           <i className=\"fas fa-user-circle mr-1\"/>\r\n                            {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                 <Link className=\"nav-link\" to=\"/logout\"  onClick={this.logout.bind(this)}>\r\n                        Logout\r\n                 </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated =(\r\n                \r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n             <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/register\">\r\n                         Sign Up\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/login\">\r\n                        Login\r\n                       \r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n\r\n     let headerLinks;\r\n     \r\n     if(validateToken && user){\r\n           headerLinks = userIsAuthenticated;\r\n     }else{\r\n          headerLinks = userIsNotAuthenticated;\r\n     }\r\n        return(\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    Personal Project Management Tool\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\"   data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n                  {headerLinks}\r\n            </div>\r\n        </nav>\r\n        );\r\n     }\r\n}\r\n\r\nHeader.propTypes ={\r\n     logout: PropTypes.func.isRequired,\r\n     security : PropTypes.object.isRequired\r\n}\r\n\r\n  const mapStateToProps = state =>({\r\n      security: state.security\r\n  })\r\n export default connect(mapStateToProps, {logout}) (Header);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../actions/projectActions';\r\nimport classnames from 'classnames';\r\n\r\nclass AddProject extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n\r\n        this.state ={\r\n            projectName :\"\",\r\n            projectIdentifier :\"\",\r\n            description: \"\",\r\n            start_date:\"\",\r\n            end_date :\"\",\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange= this.onChange.bind(this);\r\n        this.onSubmit= this.onSubmit.bind(this);\r\n    }\r\n\r\n   componentWillReceiveProps(nextProps){\r\n       if(nextProps.errors){\r\n           this.setState({ errors : nextProps.errors})\r\n       }\r\n   }\r\n\r\n   onChange(event){\r\n        this.setState({[event.target.name]: event.target.value})\r\n   } \r\n\r\n   onSubmit(event){\r\n       event.preventDefault();\r\n\r\n       const newProject ={\r\n        projectName :this.state.projectName,\r\n        projectIdentifier: this.state.projectIdentifier,\r\n        description: this.state.description,\r\n        start_date:this.state.start_date,\r\n        end_date : this.state.end_date\r\n       }\r\n\r\n     this.props.createProject(newProject,this.props.history)\r\n       // console.log(newProject);\r\n   }\r\n    \r\n    render() {\r\n\r\n         const {errors} = this.state;\r\n    return (\r\n    <div>\r\n    <div className=\"project\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n                    <hr />\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.projectName})} placeholder=\"Project Name\"\r\n                            name=\"projectName\" \r\n                            value={this.state.projectName}\r\n                            onChange={this.onChange}/>\r\n                           {errors.projectName && (\r\n                               <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                           )}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\",\r\n                            {\"is-invalid\": errors.projectIdentifier})} placeholder=\"Unique Project ID\"\r\n                            name=\"projectIdentifier\"\r\n                            value={this.state.projectIdentifier}\r\n                            onChange={this.onChange}/>\r\n                            {errors.projectIdentifier &&(\r\n                                 <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                            )}\r\n                        </div>\r\n                      \r\n                        <div className=\"form-group\">\r\n                            <textarea className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.description})} placeholder=\"Project Description\"\r\n                            name=\"description\"\r\n                            value={this.state.description}\r\n                            onChange={this.onChange}></textarea>\r\n                            {errors.description &&(\r\n                                <div className=\"invalid-feedback\">{errors.description}</div>\r\n                            )} \r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"start_date\"\r\n                            value={this.state.start_date} \r\n                            onChange={this.onChange}/>\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"end_date\" \r\n                            value={this.state.end_date}\r\n                            onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddProject.propTypes={\r\n     createProject :PropTypes.func.isRequired,\r\n     errors : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapErrorToState = state =>({\r\n        errors: state.errors\r\n});\r\n\r\nexport default  connect(mapErrorToState, {createProject}) (AddProject);"," import {GET_ERRORS}  from '../actions/types';\r\n\r\n\r\n  const initialState ={};\r\n\r\n   export default function(state=initialState, action){\r\n\r\n     switch(action.type){\r\n\r\n        case GET_ERRORS:\r\n             return  action.payload;\r\n\r\n        default:\r\n           return state;\r\n     }\r\n   }","import { GET_PROJECTS, GET_PROJECT ,DELETE_PROJECT } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n\r\n        case GET_PROJECT:\r\n            return {\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n         case DELETE_PROJECT:\r\n              return {\r\n             ...state,\r\n             projects:state.projects.filter(\r\n                 project => project.projectIdentifier !==action.payload\r\n             )\r\n\r\n            } \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {GET_BACKLOGS,GET_PROJECT_TASK,DELETE_PROJECT_TASK} from '../actions/types';\r\n\r\n\r\nconst initialState ={\r\n     project_tasks : [],\r\n     project_task : {}\r\n}\r\n\r\n\r\n export default function(state= initialState, action){\r\n\r\n     switch(action.type){\r\n            case GET_BACKLOGS:\r\n               return {\r\n                    ...state,\r\n                    project_tasks: action.payload\r\n               };\r\n             case GET_PROJECT_TASK:\r\n                return{\r\n                     ...state,\r\n                     project_task: action.payload\r\n                };\r\n               case DELETE_PROJECT_TASK :\r\n                    return{\r\n                        ...state,\r\n                        project_tasks:state.project_tasks.filter(project_task =>{\r\n                           return project_task.projectSequence !== action.payload\r\n                        }) \r\n                    };\r\n                \r\n         default: \r\n             return state;\r\n     }\r\n }","\r\nimport {SET_CURRENT_USER } from  '../actions/types';\r\n\r\n\r\n const initialState ={\r\n\r\n     user :{},\r\n      validateToken : false\r\n };\r\n\r\n  const booleanValidateToken =(payload) =>{\r\n      if(payload){\r\n             return true;\r\n      } else{\r\n           return  false;\r\n      }\r\n  }\r\n  export default function( state =initialState, action){\r\n\r\n    switch(action.type){\r\n\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validateToken :  booleanValidateToken(action.payload),\r\n                user : action.payload\r\n            }\r\n\r\n        default:\r\n             return state;\r\n\r\n    }\r\n  }","import { combineReducers } from \"redux\";\r\nimport errorReducer from './errorReducer';\r\nimport projectsReducers from './projectsReducers';\r\nimport backlogReducers from './backlogReducers';\r\nimport SecurityReducer from './SecurityReducer';\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectsReducers,\r\n    backlog : backlogReducers,\r\n    security : SecurityReducer\r\n});\r\n\r\n//this is the combine reducer","import {createStore,applyMiddleware,compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport  rootReducer from \"./reducers\";\r\n\r\n\r\n  const  initialState ={};\r\n   const middleWare =[thunk];\r\n\r\n   let store;\r\n\r\n    const  ReactReduxDevTools =  window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\n   if(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n        store = createStore(\r\n            rootReducer,\r\n            initialState,\r\n            compose(applyMiddleware(...middleWare),\r\n            ReactReduxDevTools\r\n         ) );\r\n   }else{\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleWare))\r\n    );\r\n   }\r\n\r\n\r\n    export default store;","import React, { Component } from 'react';\r\nimport { getProject,createProject } from '../../actions/projectActions';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nclass UpdateProject extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            id:\"\",\r\n            projectName :\"\",\r\n            projectIdentifier :\"\",\r\n            description: \"\",\r\n            start_date:\"\",\r\n            end_date :\"\",\r\n            errors:{}\r\n        }\r\n\r\n        this.onChange =this.onChange.bind(this);\r\n        this.onSubmit =  this.onSubmit.bind(this);\r\n    }\r\n\r\n     componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n           const {\r\n           id,\r\n           projectName ,\r\n           projectIdentifier ,\r\n           description,\r\n           start_date,\r\n           end_date \r\n         } = nextProps.project;\r\n        \r\n         this.setState({\r\n            id,\r\n            projectName ,\r\n            projectIdentifier ,\r\n            description,\r\n            start_date,\r\n            end_date\r\n         });\r\n     }\r\n\r\n     onChange(event){\r\n         this.setState({[event.target.name]: event.target.value})\r\n     }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n     const updateProject ={\r\n        id:this.state.id,\r\n        projectName :this.state.projectName,\r\n        projectIdentifier :this.state.projectIdentifier,\r\n        description: this.state.description,\r\n        start_date:this.state.start_date,\r\n        end_date :this.state.end_date\r\n     }\r\n     this.props.createProject(updateProject,this.props.history);\r\n\r\n    }\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        this.props.getProject(id, this.props.history)\r\n    }\r\n    render() {\r\n\r\n        const {errors} = this.state;\r\n\r\n            return (\r\n            <div className=\"project\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n                            <hr />\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectName})} placeholder=\"Project Name\" \r\n                                    name=\"projectName\"\r\n                                    value={this.state.projectName}\r\n                                    onChange={this.onChange}/>\r\n                                    {errors.projectName &&(\r\n                                            <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.projectIdentifier})} placeholder=\"Unique Project ID\"\r\n                                      name=\"projectIdentifier\"\r\n                                      value={this.state.projectIdentifier}\r\n                                      onChange={this.onChange}\r\n                                        disabled />\r\n                                        {errors.projectIdentifier &&(\r\n                                            <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\r\n                                        )\r\n                                        }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <textarea className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.description})} placeholder=\"Project Description\"\r\n                                    name=\"description\"\r\n                                    value={this.state.description}\r\n                                    onChange={this.onChange}>\r\n                                </textarea>\r\n                                {errors.description && (\r\n                                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                               )\r\n                               }\r\n                                </div>\r\n                                <h6>Start Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg\")} name=\"start_date\"\r\n                                    value={this.state.start_date} \r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n                                <h6>Estimated End Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className={classnames(\"form-control form-control-lg\")} name=\"end_date\" \r\n                                    value={this.state.end_date}\r\n                                    onChange={this.onChange}/>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n});\r\nexport default connect(mapStateToProps, { getProject,createProject })(UpdateProject);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { deleteProjectTaskByProjectIdentifierAndProjectSequence } from '../../../actions/backlogActions';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ProjectTask extends Component {\r\n\r\n    onDeleteClick =(projectIdentifier,projectSequence)=>{\r\n          this.props.deleteProjectTaskByProjectIdentifierAndProjectSequence(projectIdentifier,projectSequence)\r\n    }\r\n\r\n  render() {\r\n\r\n     const  { projectTaskProps } =  this.props;\r\n       \r\n     let priorityString;\r\n     let priorityClass;\r\n\r\n     if(projectTaskProps.priority===1){\r\n        priorityClass =\"bg-danger text-light\"\r\n        priorityString =\"HIGH\"\r\n     }\r\n\r\n     if(projectTaskProps.priority===2){\r\n         priorityClass =\"bg-warning text-light\"\r\n         priorityString= \"MEDIUM\"\r\n     }\r\n      if(projectTaskProps.priority===3){\r\n           priorityClass= \"bg-primary text-light\"\r\n            priorityString =\"LOW\"\r\n      }\r\n\r\n    return (\r\n       \r\n         <div className=\"card mb-1 bg-light\">\r\n\r\n             <div className={`card-header text-primary ${priorityClass}`}>\r\n                 ID: {projectTaskProps.projectSequence} --\r\n                  Priority: {priorityString}\r\n             </div>\r\n             <div className=\"card-body bg-light\">\r\n                 <h5 className=\"card-title\">{projectTaskProps.summary}</h5>\r\n                 <p className=\"card-text text-truncate \">\r\n                     {projectTaskProps.acceptanceCriteria}\r\n                 </p>\r\n                 <Link to={`/updateProjectTask/${projectTaskProps.projectIdentifier}/${projectTaskProps.projectSequence}`} className=\"btn btn-primary\">\r\n                     View / Update\r\n                 </Link>\r\n\r\n                 <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this,projectTaskProps.projectIdentifier,projectTaskProps.projectSequence)}>\r\n                     Delete\r\n                 </button>\r\n             </div>\r\n         </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n ProjectTask.propTypes = {\r\n      deleteProjectTaskByProjectIdentifierAndProjectSequence : PropTypes.func.isRequired\r\n }\r\n\r\nexport default connect(null, {deleteProjectTaskByProjectIdentifierAndProjectSequence}) (ProjectTask);"," import axios from 'axios';\r\n import { GET_BACKLOGS, GET_PROJECT_TASK, DELETE_PROJECT_TASK,GET_ERRORS } from  './types';\r\n\r\n\r\n export const createBacklogByProjectTaskIdentifier= (projectTaskIdentifier, projectTask, history) => async dispatch =>{\r\n\r\n    try{\r\n      await axios.post(`/api/backlog/${projectTaskIdentifier}`, projectTask);\r\n        history.push(`/projectBoard/${projectTaskIdentifier}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload:{}\r\n        })\r\n    } catch(error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload : error.response.data\r\n        \r\n        })\r\n    }\r\n    \r\n } \r\n\r\n\r\n  export const getProjectTaskByProjectIdentifier = projectTaskIdentifier => async dispatch =>{\r\n\r\n    try {\r\n         const response = await axios.get(`/api/backlog/${projectTaskIdentifier}`);\r\n            dispatch({\r\n                type: GET_BACKLOGS,\r\n                payload : response.data\r\n            });\r\n    } catch (error) {\r\n          \r\n        dispatch({\r\n             type: GET_ERRORS,\r\n             payload: error.response.data\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n   export const getProjectTaskByProjectIdentifierAndProjectSequence =(projectIdentifier,projectSequence,history) => async dispatch =>{\r\n\r\n      try {\r\n           const response = await axios.get(`/api/backlog/${projectIdentifier}/${projectSequence}`);\r\n            dispatch({\r\n                type:GET_PROJECT_TASK,\r\n                payload:response.data\r\n            });\r\n      } catch (error) {\r\n          history.push(\"/dashboard\");\r\n      }\r\n   };\r\n\r\n    export const updateProjectTaskByProjectIdentifierAndProjectSequence =(projectIdentifier,projectSequence,projectTask,history) => async dispatch =>{\r\n\r\n        try {\r\n             const response = await axios.patch(`/api/backlog/${projectIdentifier}/${projectSequence}`,projectTask);\r\n               history.push(`/projectBoard/${projectIdentifier}`);\r\n               dispatch({\r\n                    type:GET_ERRORS,\r\n                    payload :{}\r\n               })\r\n        } catch (error) {\r\n             dispatch({\r\n                 type: GET_ERRORS,\r\n                 payload: error.response.data\r\n             });\r\n        }\r\n    }\r\n\r\n export const deleteProjectTaskByProjectIdentifierAndProjectSequence =(projectIdentifier,projectSequence) => async dispatch =>{\r\n     \r\n   if(window.confirm(`You are about to delete project task ${projectSequence}, this cannot be undone !`)){\r\n      await axios.delete(`/api/backlog/${projectIdentifier}/${projectSequence}`)\r\n       dispatch({\r\n            type : DELETE_PROJECT_TASK,\r\n            payload: projectSequence\r\n       })\r\n    }\r\n }\r\n","import React, { Component } from 'react'\r\nimport ProjectTask from './ProjectTasks/ProjectTask';\r\n\r\n class Backlog extends Component {\r\n  render() {\r\n\r\n      const { project_tasks_props   } = this.props;\r\n\r\n       const tasks = project_tasks_props.map( project_task =>(\r\n           <ProjectTask  key={project_task.id} projectTaskProps={project_task}/>\r\n       ));\r\n\r\n   let  todoItems = [];\r\n   let inprogressItems = [];\r\n   let doneItemItems = [];\r\n\r\n   for(let i=0; i<tasks.length; i++){\r\n        console.log(tasks[i]);\r\n       if(tasks[i].props.projectTaskProps.status ===\"TO_DO\"){\r\n        todoItems.push(tasks[i]);\r\n       }\r\n\r\n        if(tasks[i].props.projectTaskProps.status ===\"IN_PROGRESS\"){\r\n             inprogressItems.push(tasks[i]);\r\n        }\r\n\r\n         if(tasks[i].props.projectTaskProps.status ===\"DONE\"){\r\n             doneItemItems.push(tasks[i]);\r\n         }\r\n   }\r\n\r\n    return (\r\n       \r\n\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>TO DO</h3>\r\n                        </div>\r\n                    </div>\r\n                    {todoItems}\r\n                    {\r\n                        //Render your  task here\r\n                    }  \r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                      {inprogressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItemItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Backlog;","import React, { Component } from 'react';\r\nimport {Link } from 'react-router-dom';\r\nimport Backlog from './Backlog';\r\nimport {connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getProjectTaskByProjectIdentifier} from '../../actions/backlogActions';\r\n\r\nclass ProjectBoard extends Component {\r\n\r\n //constructor to handle errors\r\n\r\n constructor(){\r\n    super();\r\n\r\n    this.state ={\r\n       errors: {}\r\n    };\r\n }\r\n\r\n  componentDidMount(){\r\n       const { id } = this.props.match.params;\r\n     this.props.getProjectTaskByProjectIdentifier(id);\r\n  }\r\n\r\n   componentWillReceiveProps(nextProps){\r\n      if(nextProps.errors){\r\n         this.setState({ errors : nextProps.errors});\r\n      }\r\n   }\r\n  render() {\r\n     \r\n    const { id } =  this.props.match.params;\r\n    \r\n     const { project_tasks } =  this.props.project_task;\r\n\r\n     const { errors } = this.state;\r\n\r\n     let BoardContent;\r\n\r\n      const  boardAlgorithms = (errors, project_tasks) =>{\r\n            if(project_tasks.length <1){\r\n               //Meaning that , the project tasks is empty array list {// the projectIdentifier that i used here is the replacement of project Not found if the user passed in inavliad Project Identifier in the route/path on the browser}\r\n               if(errors.projectIdentifier){\r\n                   return (\r\n                        <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                          {errors.projectIdentifier}  \r\n                        </div>\r\n                   );\r\n               }else{\r\n                    return(\r\n                      <div className=\"alert alert-info text-center\" role=\"alert\">\r\n                        No Project Task on this Board\r\n                      </div>\r\n                    );\r\n               }\r\n            }else{\r\n                 return <Backlog  project_tasks_props ={project_tasks}/>;\r\n            }\r\n      };\r\n\r\n      BoardContent = boardAlgorithms(errors,project_tasks);\r\n\r\n    return (\r\n  \r\n      <div className=\"container\">\r\n      <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n      </Link>\r\n      <br />\r\n      <hr />\r\n     {BoardContent}\r\n  </div>\r\n)\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes ={\r\n    getProjectTaskByProjectIdentifier : PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\n const mapStateToProps = state =>({\r\n    project_task : state.backlog,\r\n    errors : state.errors\r\n })\r\nexport default  connect(mapStateToProps, {getProjectTaskByProjectIdentifier}) (ProjectBoard);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {createBacklogByProjectTaskIdentifier }  from '../../../actions/backlogActions';\r\n\r\n class AddProjectTask extends Component {\r\n     \r\n    constructor(props){\r\n         super(props); \r\n        // The  reason why we set this props is because, we are passing the ProjectTaskIdentifier in the url for us to submit the backlog\r\n      \r\n        const { id } = this.props.match.params;\r\n\r\n       this.state ={\r\n        summary : \"\",\r\n        acceptanceCriteria : \"\",\r\n        dueDate : \"\",\r\n        priority: 0,\r\n        status: \"\",\r\n        projectIdentifier:id,\r\n        errors: {}\r\n       }  \r\n\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this); \r\n    }\r\n\r\n    onChange(event){\r\n          this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n        const projectTask ={\r\n            summary : this.state.summary,\r\n            acceptanceCriteria : this.state.acceptanceCriteria,\r\n            dueDate : this.state.dueDate,\r\n            priority: this.state.priority,\r\n            status: this.state.status\r\n        }\r\n\r\n        this.props.createBacklogByProjectTaskIdentifier(this.state.projectIdentifier,projectTask,                                                      this.props.history);\r\n    }\r\n     componentWillReceiveProps(nextProps){\r\n         if(nextProps.errors){\r\n             this.setState({errors: nextProps.errors});\r\n         }\r\n     }\r\n\r\n  render() {\r\n\r\n       const { id } = this.props.match.params;\r\n        const { errors } = this.state;\r\n\r\n    return (\r\n        <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add  Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form  onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                            className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.summary})} name=\"summary\" placeholder=\"Project Task summary\"\r\n                             value={this.state.summary} \r\n                             onChange={this.onChange}/>\r\n                             {errors.summary && (\r\n                                 <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                             )}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.acceptanceCriteria}\r\n                         )} placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                              value ={this.state.acceptanceCriteria}\r\n                              onChange={this.onChange}></textarea>\r\n                        {errors.acceptanceCriteria && (\r\n                             <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\r\n                        )}\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \r\n                            value={this.state.dueDate}\r\n                            onChange={this.onChange}/>\r\n                         </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                            value={this.state.priority}\r\n                            onChange={this.onChange}>\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\"\r\n                            value={this.state.status}\r\n                            onChange={this.onChange}>\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"TO_DO\">TO DO</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes ={\r\n    createBacklogByProjectTaskIdentifier :PropTypes.func.isRequired,\r\n    errors :PropTypes.object.isRequired\r\n}\r\n\r\n const mapStateToProps = state =>({\r\n    errors : state.errors\r\n });\r\n\r\nexport default connect(mapStateToProps, {createBacklogByProjectTaskIdentifier}) (AddProjectTask);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport { getProjectTaskByProjectIdentifierAndProjectSequence,updateProjectTaskByProjectIdentifierAndProjectSequence } from '../../../actions/backlogActions';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass UpdateProjectTask extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n\r\n        this.state ={\r\n            id: \"\",\r\n            projectSequence: \"\",\r\n            summary: \"\",\r\n            acceptanceCriteria:\"\",\r\n            status: \"\",\r\n            priority: \"\",\r\n            dueDate: \"\",\r\n            projectIdentifier: \"\",\r\n            create_At:\"\",\r\n            errors:{}\r\n        }\r\n\r\n      this.onChange= this.onChange.bind(this);\r\n      this.onSubmit =  this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { projectIdentifier, projectSequence } = this.props.match.params;\r\n        this.props.getProjectTaskByProjectIdentifierAndProjectSequence(projectIdentifier, projectSequence, this.props.history);\r\n    }\r\n\r\n     componentWillReceiveProps(nextProps){\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors : nextProps.errors});\r\n        }\r\n         const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n         } = nextProps.update_task;\r\n\r\n           this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            status,\r\n            priority,\r\n            dueDate,\r\n            projectIdentifier,\r\n            create_At\r\n           });\r\n     }\r\n\r\n       onChange(event){\r\n             this.setState({[event.target.name]: event.target.value});\r\n       }\r\n\r\n       onSubmit(event){\r\n            event.preventDefault();\r\n\r\n            const updateProjectTask ={\r\n                  id:this.state.id,\r\n                    projectSequence :this.state.projectSequence,\r\n                    summary: this.state.summary,\r\n                    acceptanceCriteria : this.state.acceptanceCriteria,\r\n                    status : this.state.status,\r\n                    priority : this.state.priority,\r\n                    dueDate : this.state.dueDate,\r\n                    projectIdentifier: this.state.projectIdentifier,\r\n                    create_At : this.state.create_At\r\n            }\r\n        \r\n            this.props.updateProjectTaskByProjectIdentifierAndProjectSequence(this.state.projectIdentifier,this.state.projectSequence,updateProjectTask,this.props.history);\r\n       }\r\n    render() {\r\n\r\n        const { errors,projectIdentifier } = this.state;\r\n        return (\r\n         \r\n            <div className=\"add-PBI\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <Link to={`/projectBoard/${projectIdentifier}`} className=\"btn btn-light\">\r\n                                Back to Project Board\r\n                    </Link>\r\n                            <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                            <p className=\"lead text-center\">Project Name :{this.state.projectIdentifier}|Project Task ID : {this.state.projectSequence}</p>\r\n                            <form  onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\":errors.summary})} name=\"summary\" placeholder=\"Project Task summary\" \r\n                                      value={this.state.summary}\r\n                                      onChange={this.onChange}/>\r\n                                      {errors.summary &&(\r\n                                         <div className=\"invalid-feedback\">{errors.summary}</div>\r\n\r\n                                      )}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <textarea className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.acceptanceCriteria})} placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                                     value={this.state.acceptanceCriteria}\r\n                                     onChange={this.onChange}></textarea>\r\n                                     {errors.acceptanceCriteria &&(\r\n                                           <div className=\"invalid-feedback\">{errors.acceptanceCriteria}</div>\r\n                                     )}\r\n                                </div>\r\n                                <h6>Due Date</h6>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \r\n                                     value={this.state.dueDate}\r\n                                     onChange={this.onChange}/>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"priority\" value={this.state.priority} onChange={this.onChange}>\r\n                                        <option value={0}>Select Priority</option>\r\n                                        <option value={1}>High</option>\r\n                                        <option value={2}>Medium</option>\r\n                                        <option value={3}>Low</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <select className=\"form-control form-control-lg\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                                        <option value=\"\">Select Status</option>\r\n                                        <option value=\"TO_DO\">TO DO</option>\r\n                                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                        <option value=\"DONE\">DONE</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTaskByProjectIdentifierAndProjectSequence: PropTypes.func.isRequired,\r\n    update_task: PropTypes.object.isRequired,\r\n    updateProjectTaskByProjectIdentifierAndProjectSequence: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    update_task:state.backlog.project_task,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps,{ getProjectTaskByProjectIdentifierAndProjectSequence ,updateProjectTaskByProjectIdentifierAndProjectSequence})(UpdateProjectTask);","import React, { Component } from 'react';\r\nimport { connect }  from 'react-redux';\r\nimport PropTypes from  'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n class LandingPage extends Component {\r\n\r\n   componentDidMount(){\r\n       if(this.props.security.validateToken){\r\n           this.props.history.push(\"/dashboard\");\r\n       }\r\n   }  \r\n  render() {\r\n    return (\r\n        <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to join active projects or start your own\r\n                        </p>\r\n                        <hr />\r\n                        <Link to=\"/register\" className=\"btn btn-lg btn-primary mr-2\">\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nLandingPage.propTypes ={\r\n     security : PropTypes.object.isRequired\r\n};\r\n\r\n const mapStateToProps = state =>({\r\n     security : state.security\r\n });\r\n\r\nexport default connect(mapStateToProps)(LandingPage);","import React, { Component } from 'react'\r\nimport { createNewser } from '../../actions/SecurityActions';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\nclass Register extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            fullName: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            errors: {}\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validateToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }  \r\n \r\n\r\n    onChange(event){\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    onSubmit(event){\r\n        event.preventDefault();\r\n\r\n         const newUser ={\r\n            username: this.state.username,\r\n            fullName:this.state.fullName,\r\n            password:this.state.password,\r\n            confirmPassword:this.state.confirmPassword\r\n         };\r\n\r\n         this.props.createNewser(newUser, this.props.history);\r\n    }\r\n\r\n\r\n     componentWillReceiveProps(nextProps){\r\n          if(nextProps.errors){\r\n                 this.setState({ errors : nextProps.errors});\r\n          }\r\n     }\r\n\r\n    render() {\r\n\r\n          const { errors } = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                            <p className=\"lead text-center\">Create your Account</p>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.fullName})} placeholder=\" Full Name\" name=\"fullName\"\r\n                                        value={this.state.fullName} \r\n                                        onChange={this.onChange}/>\r\n                                    { \r\n                                        errors.fullName &&(\r\n                                              <div className =\"invalid-feedback\">{errors.fullName}</div>\r\n                                        )\r\n                                    \r\n                                    }\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\r\n                                        \"is-invalid\": errors.username})} placeholder=\"Email Address (Username)\" name=\"username\" \r\n                                     value={this.state.username}\r\n                                     onChange={this.onChange}/>\r\n                                        {\r\n                                            errors.username &&(\r\n                                                 <div  className=\"invalid-feedback\">{errors.username}</div>\r\n                                            )\r\n                                        }        \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\r\n                                        \"is-invalid\": errors.password})} placeholder=\"Password\" name=\"password\" \r\n                                    value={ this.state.password}\r\n                                    onChange={this.onChange}/>\r\n                                    {\r\n                                        errors.password &&(\r\n                                             <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                        )\r\n\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\r\n                                        \"is-invalid\": errors.confirmPassword})} placeholder=\"Confirm Password\"\r\n                                        name=\"confirmPassword\" \r\n                                        value={this.state.confirmPassword}\r\n                                        onChange={this.onChange}/>\r\n\r\n                                        {\r\n                                            errors.confirmPassword &&(\r\n                                                 <div className=\"invalid-feedback\">{errors.confirmPassword}</div>\r\n                                            )\r\n    \r\n                                        }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes ={\r\n     createNewser : PropTypes.func.isRequired,\r\n     errors: PropTypes.object.isRequired,\r\n     security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n   errors : state.errors,\r\n   security : state.security\r\n});\r\n\r\nexport default  connect(mapStateToProps,{createNewser})(Register);","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { login } from '../../actions/SecurityActions';\r\n\r\nclass Login extends Component {\r\n  \r\n     constructor(){\r\n          super();     \r\n        \r\n          this.state ={\r\n             username : \"\",\r\n             password : \"\",\r\n             errors :{}   \r\n\r\n          };\r\n           this.onChange= this.onChange.bind(this);\r\n           this.onSubmit = this.onSubmit.bind(this);\r\n        }\r\n\r\n    componentDidMount(){\r\n        if(this.props.security.validateToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n    }      \r\n\r\n  onChange(event){\r\n      this.setState({[event.target.name]: event.target.value});\r\n  }\r\nonSubmit(event){\r\n     event.preventDefault();\r\n     \r\n      const newLogin ={\r\n          username : this.state.username,\r\n          password : this.state.password\r\n      }\r\n\r\n      this.props.login(newLogin);\r\n} \r\n\r\ncomponentWillReceiveProps(nextProps){\r\n    if(nextProps.errors){\r\n           this.setState({ errors : nextProps.errors});\r\n    }\r\n    if(nextProps.security.validateToken){\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\n    render() {\r\n\r\n         const {errors} =  this.state;\r\n        return (\r\n            <div className=\"login\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8 m-auto\">\r\n                            <h1 className=\"display-4 text-center\">Log In</h1>\r\n                            <form onSubmit ={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.username})} placeholder=\"Email Address\" name=\"username\"\r\n                                     value={this.state.username} \r\n                                     onChange={this.onChange}/>\r\n                                        { errors.username && \r\n                                            <div className=\"invalid-feedback\">{errors.username}</div>\r\n                                        }    \r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"password\" className={classnames(\"form-control form-control-lg\",{\"is-invalid\": errors.password})} placeholder=\"Password\" name=\"password\" \r\n                                     value ={this.state.password}\r\n                                     onChange={this.onChange}/>\r\n                                    { errors.password && \r\n                                        <div className=\"invalid-feedback\">{errors.password}</div>\r\n                                    }\r\n                                </div>\r\n                                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n Login.propTypes ={\r\n      login : PropTypes.func.isRequired,\r\n      errors: PropTypes.object.isRequired,\r\n      security: PropTypes.object.isRequired\r\n      \r\n }\r\n\r\n const mapStateToProps = state =>({\r\n    errors : state.errors,\r\n    security: state.security\r\n\r\n });\r\nexport default  connect(mapStateToProps, {login})(Login);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n const SecuredRoute = ( { component: Component, security, ...otherProps}) =>(\r\n     <Route  {...otherProps} render= { props => security.validateToken ===true ?( <Component { ...props }/>) : (<Redirect  to=\"/login\"/>)} />\r\n );\r\n\r\n\r\n SecuredRoute.propTypes ={\r\n      security : PropTypes.object.isRequired\r\n }\r\n\r\n const mapStateToProps = state =>({\r\n     security : state.security\r\n })\r\n\r\n export default connect(mapStateToProps)(SecuredRoute);","import React, { Component } from 'react';\r\nimport Dashboard from './components/Dashboard';\r\nimport Header from './components/Layout/Header';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport AddProject from './components/Project/AddProject';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport UpdateProject from './components/Project/UpdateProject';\r\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\r\nimport LandingPage from './components/Layout/LandingPage';\r\nimport Register from './components/UserManagement/Register';\r\nimport Login from './components/UserManagement/Login';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setJWTHeaders from './SecurityUtils/setJWTHeaders';\r\nimport { SET_CURRENT_USER } from './actions/types';\r\nimport { logout } from './actions//SecurityActions';\r\nimport SecuredRoute from './SecurityUtils/SecureRoute';\r\n\r\n//The below code will help us to  setour token back to the state even if we refressh our  page\r\n\r\nconst JWTToken = localStorage.JWTToken;\r\n\r\nif (JWTToken) {\r\n  setJWTHeaders(JWTToken);\r\n  const decoded = jwt_decode(JWTToken);\r\n\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  });\r\n\r\n  const currentTokenTime = Date.now() / 1000;\r\n\r\n  if (decoded.exp < currentTokenTime) {\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n\r\n            {\r\n              //Public Route\r\n            }\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            {\r\n              //Private Route\r\n            }\r\n            <Switch>\r\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n              <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject} />\r\n              <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard} />\r\n              <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask} />\r\n              <SecuredRoute exact path=\"/updateProjectTask/:projectIdentifier/:projectSequence\" component={UpdateProjectTask} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}